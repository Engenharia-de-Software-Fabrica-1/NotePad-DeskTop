//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repostiorio
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class notepadengEntities : DbContext
    {
        public notepadengEntities()
            : base("name=notepadengEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<prioridades> prioridades { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tarefa> tarefa { get; set; }
        public virtual DbSet<usuario> usuario { get; set; }
    
        public virtual int AlteraUsuario(Nullable<int> usu_codigo, string usu_nome, string usu_cpf, string email, string telefone)
        {
            var usu_codigoParameter = usu_codigo.HasValue ?
                new ObjectParameter("usu_codigo", usu_codigo) :
                new ObjectParameter("usu_codigo", typeof(int));
    
            var usu_nomeParameter = usu_nome != null ?
                new ObjectParameter("usu_nome", usu_nome) :
                new ObjectParameter("usu_nome", typeof(string));
    
            var usu_cpfParameter = usu_cpf != null ?
                new ObjectParameter("usu_cpf", usu_cpf) :
                new ObjectParameter("usu_cpf", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AlteraUsuario", usu_codigoParameter, usu_nomeParameter, usu_cpfParameter, emailParameter, telefoneParameter);
        }
    
        public virtual int sp_AlteraTarefa(string tar_titulo, string tar_descricao, Nullable<System.DateTime> tar_dataCriacao, Nullable<int> tar_codigo)
        {
            var tar_tituloParameter = tar_titulo != null ?
                new ObjectParameter("tar_titulo", tar_titulo) :
                new ObjectParameter("tar_titulo", typeof(string));
    
            var tar_descricaoParameter = tar_descricao != null ?
                new ObjectParameter("tar_descricao", tar_descricao) :
                new ObjectParameter("tar_descricao", typeof(string));
    
            var tar_dataCriacaoParameter = tar_dataCriacao.HasValue ?
                new ObjectParameter("tar_dataCriacao", tar_dataCriacao) :
                new ObjectParameter("tar_dataCriacao", typeof(System.DateTime));
    
            var tar_codigoParameter = tar_codigo.HasValue ?
                new ObjectParameter("tar_codigo", tar_codigo) :
                new ObjectParameter("tar_codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AlteraTarefa", tar_tituloParameter, tar_descricaoParameter, tar_dataCriacaoParameter, tar_codigoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_ExcluirTarefa(Nullable<int> tar_codigo)
        {
            var tar_codigoParameter = tar_codigo.HasValue ?
                new ObjectParameter("tar_codigo", tar_codigo) :
                new ObjectParameter("tar_codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExcluirTarefa", tar_codigoParameter);
        }
    
        public virtual int sp_ExcluirUsuario(Nullable<int> usu_codigo)
        {
            var usu_codigoParameter = usu_codigo.HasValue ?
                new ObjectParameter("usu_codigo", usu_codigo) :
                new ObjectParameter("usu_codigo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ExcluirUsuario", usu_codigoParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsereTarefa(string tar_titulo, string tar_descricao, Nullable<System.DateTime> tar_dataCriacao)
        {
            var tar_tituloParameter = tar_titulo != null ?
                new ObjectParameter("tar_titulo", tar_titulo) :
                new ObjectParameter("tar_titulo", typeof(string));
    
            var tar_descricaoParameter = tar_descricao != null ?
                new ObjectParameter("tar_descricao", tar_descricao) :
                new ObjectParameter("tar_descricao", typeof(string));
    
            var tar_dataCriacaoParameter = tar_dataCriacao.HasValue ?
                new ObjectParameter("tar_dataCriacao", tar_dataCriacao) :
                new ObjectParameter("tar_dataCriacao", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsereTarefa", tar_tituloParameter, tar_descricaoParameter, tar_dataCriacaoParameter);
        }
    
        public virtual int sp_InsereUsuario(string usu_nome, string usu_cpf, string email, string telefone)
        {
            var usu_nomeParameter = usu_nome != null ?
                new ObjectParameter("usu_nome", usu_nome) :
                new ObjectParameter("usu_nome", typeof(string));
    
            var usu_cpfParameter = usu_cpf != null ?
                new ObjectParameter("usu_cpf", usu_cpf) :
                new ObjectParameter("usu_cpf", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsereUsuario", usu_nomeParameter, usu_cpfParameter, emailParameter, telefoneParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int InsereUsuario(string usu_nome, string usu_cpf, string email, string telefone)
        {
            var usu_nomeParameter = usu_nome != null ?
                new ObjectParameter("usu_nome", usu_nome) :
                new ObjectParameter("usu_nome", typeof(string));
    
            var usu_cpfParameter = usu_cpf != null ?
                new ObjectParameter("usu_cpf", usu_cpf) :
                new ObjectParameter("usu_cpf", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var telefoneParameter = telefone != null ?
                new ObjectParameter("telefone", telefone) :
                new ObjectParameter("telefone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsereUsuario", usu_nomeParameter, usu_cpfParameter, emailParameter, telefoneParameter);
        }
    }
}
